{"version":3,"sources":["Sudoku/Diagram/styled.js","Sudoku/Diagram/index.js","Sudoku/Main/index.js","Sudoku/Title/index.js","Sudoku/index.js","App/globalStyles.js","App/theme.js","App/index.js","reportWebVitals.js","App/mainSaga.js","App/rootSaga.js","App/mainSlice.js","App/store.js","index.js"],"names":["Grid","styled","div","theme","colors","diagram","alpha","shadow","diagramBorder","Diagram","Main","main","Title","h1","title","Sudoku","GlobalStyles","createGlobalStyle","bodyBackground","breakpoints","mobile","mobileLandscape","tablet","tabletLandscape","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mainSaga","rootSaga","all","mainSlice","createSlice","name","initialState","given","reducers","setGiven","state","table","payload","actions","setError","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","sudokuSolver","sudokuSolverReducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAGaA,EAAOC,UAAOC,IAAV,2RAIO,qBAAGC,MAAkBC,OAAOC,WACjB,gBAAGF,EAAH,EAAGA,MAAH,OAAeG,IAAMH,EAAMC,OAAOG,OAAQ,OAGrD,qBAAGJ,MAAkBC,OAAOI,iB,OCFrCC,EAPC,WACZ,OACI,cAACT,EAAD,KCKOU,EAPFT,UAAOU,KAAV,8GCQKC,EARDX,UAAOY,GAAV,oJACG,qBAAGV,MAAkBC,OAAOU,SAIV,qBAAGX,MAAkBC,OAAOG,UCM7CQ,EATA,WACX,OACI,eAAC,EAAD,WACI,cAAC,EAAD,8BACA,cAAC,EAAD,QCNCC,EAAeC,4BAAH,ifAcG,qBAAGd,MAAkBC,OAAOc,kBCI3Cf,EAAQ,CACjBC,OAAQ,CACJc,eAVS,UAWTJ,MAtBG,UAuBHP,OAdU,UAeVF,QArBG,UAsBHG,cAXG,WAaPW,YAAa,CACTC,OAAQ,QACRC,gBAAiB,QACjBC,OAAQ,QACRC,gBAAiB,WChBVC,EAVH,WACV,OACE,eAAC,gBAAD,CAAerB,MAAOA,EAAtB,UACE,cAAC,YAAD,IACA,cAACa,EAAD,IACA,cAAC,EAAD,QCCSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4DCAGQ,GAAV,SAAUA,IAAV,iG,eCJGC,GAAV,SAAUA,IAAV,iEACI,OADJ,SACUC,YAAI,CACNF,MAFR,uCAMeC,QCPTE,EAAYC,YAAY,CAC1BC,KAAM,eACNC,aAAc,CACVC,MAAQ,CAAC,KAEbC,SAAU,CACNC,SAAU,SAACC,EAAD,GAAgC,IAAbC,EAAY,EAArBC,QAChBF,EAAMH,MAAQI,MAaXR,GANXA,EAAUU,QADVC,SAOWX,EAAf,SChBMY,EAAiBC,cAEjBC,EAAQC,YAAe,CACzBC,QAAS,CACLC,aAAcC,GAElBC,WAAY,CAACP,KAGjBA,EAAeQ,IAAItB,GAEJgB,QCVfO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJU,SAASC,eAAe,SAG1BrC,M","file":"static/js/main.c73e6d8f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport alpha from \"color-alpha\";\r\n\r\nexport const Grid = styled.div`\r\n    display: grid;\r\n    width: 100%;\r\n    height: 85vh;\r\n    background-color: ${({ theme }) => theme.colors.diagram};\r\n    box-shadow: 0px 0px 15px 3px ${({ theme }) => alpha(theme.colors.shadow, 0.6)};\r\n    border-radius: 10px;\r\n    transition: 0.3s;\r\n    border: 1px solid ${({ theme }) => theme.colors.diagramBorder};\r\n\r\n    &:hover {\r\n        border-radius: 20px;\r\n    }\r\n`;","import { Grid } from \"./styled\";\r\n\r\nconst Diagram = () => {\r\n    return (\r\n        <Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Diagram;","import styled from \"styled-components\";\r\n\r\nconst Main = styled.main`\r\n    max-width: 85vh;\r\n    min-width: 300px;\r\n    width: 100%;\r\n    margin: auto;\r\n`;\r\n\r\nexport default Main;","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n    color:  ${({ theme }) => theme.colors.title};\r\n    font-size:  48px;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-shadow: 0px 0px 15px ${({ theme }) => theme.colors.shadow};\r\n`;\r\n\r\nexport default Title;","import Diagram from \"./Diagram\";\r\nimport Main from \"./Main\";\r\nimport Title from \"./Title\";\r\n\r\nconst Sudoku = () => {\r\n    return (\r\n        <Main>\r\n            <Title> Sudoku Solver </Title>\r\n            <Diagram />\r\n        </Main>\r\n    );\r\n}\r\n\r\nexport default Sudoku;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n\r\n    *,\r\n    ::after,\r\n    ::before {\r\n        box-sizing: inherit;\r\n        -webkit-font-smoothing: inherit;\r\n    }\r\n\r\n    body {\r\n        background-color: ${({ theme }) => theme.colors.bodyBackground};\r\n        font-family: 'Irish Grover', cursive;\r\n        padding-bottom: 40px;\r\n    }\r\n\r\n    button {\r\n        font-family: 'Alfa Slab One', cursive;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n`;","const pallette = {\r\n    white: \"#FFFFFF\",\r\n    black: \"#000000\",\r\n    seance: \"#6018A5\",\r\n    minsk: \"#522E74\",\r\n    parisM: \"#330660\",\r\n    purpleHeart: \"#833DC7\",\r\n    amethyst: \"#8F56C7\",\r\n    funBlue: \"#1D44A4\",\r\n    sanJuan: \"#314473\",\r\n    deepSapphire: \"#07205F\",\r\n    indigo: \"#4167C6\",\r\n    indigoLight: \"#5A79C6\",\r\n    razzmatazz: \"#D51059\",\r\n    camelot: \"#953558\",\r\n    siren: \"#7C0430\",\r\n    ceriseRed: \"#E53979\",\r\n    cranberry: \"#E5598D\",\r\n}\r\n\r\nexport const theme = {\r\n    colors: {\r\n        bodyBackground: pallette.indigoLight,\r\n        title: pallette.white,\r\n        shadow: pallette.deepSapphire,\r\n        diagram: pallette.minsk,\r\n        diagramBorder: pallette.siren,\r\n    },\r\n    breakpoints: {\r\n        mobile: \"320px\",\r\n        mobileLandscape: \"568px\",\r\n        tablet: \"767px\",\r\n        tabletLandscape: \"1024px\",\r\n    }\r\n}","import { ThemeProvider } from \"styled-components\";\nimport { Normalize } from \"styled-normalize\";\nimport Sudoku from \"../Sudoku\";\nimport { GlobalStyles } from \"./globalStyles\";\nimport { theme } from \"./theme\";\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Normalize />\n      <GlobalStyles />\n      <Sudoku />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n// function* fetchSearchHandler() {\r\n//     // const isGenresEmpty = yield select(selectIsGenresListEmpty);\r\n//     // const genres = yield call(fetchGenres);\r\n//     // yield put(setGenres(genres.genres));    \r\n// }\r\n\r\nexport function* mainSaga() {\r\n    //yield takeLatest(fetchMoviesListData.type, fetchListHandler);\r\n    //yield debounce(1000, fetchSearchData.type, fetchSearchHandler);\r\n}","import { all } from \"@redux-saga/core/effects\";\r\nimport { mainSaga } from \"./mainSaga\"\r\n\r\nfunction* rootSaga () {\r\n    yield all([\r\n        mainSaga(),\r\n    ])\r\n}\r\n\r\nexport default rootSaga;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst mainSlice = createSlice({\r\n    name: 'sudokuSolver',\r\n    initialState: {\r\n        given : [[]],\r\n    },\r\n    reducers: {\r\n        setGiven: (state, { payload: table }) => {\r\n            state.given = table;\r\n        },\r\n    }\r\n});\r\n\r\nexport const {\r\n    setError,\r\n} = mainSlice.actions;\r\n\r\nexport const selectSudokuSolverSaga = state => state.sudokuSolver;\r\nexport const selectGiven = state => selectSudokuSolverSaga(state).given;\r\n\r\n\r\nexport default mainSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"@redux-saga/core\";\r\nimport rootSaga from \"./rootSaga\";\r\nimport sudokuSolverReducer from \"./mainSlice\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        sudokuSolver: sudokuSolverReducer,\r\n    },\r\n    middleware: [sagaMiddleware]\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./App/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}