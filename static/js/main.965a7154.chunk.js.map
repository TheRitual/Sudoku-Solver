{"version":3,"sources":["utils/arrayFunctions.js","App/globalParams.js","App/mainSlice.js","utils/customHooks.js","Sudoku/Diagram/diagramParamNames.js","utils/templates.js","Sudoku/Diagram/diagramHooks.js","Sudoku/Diagram/styled.js","Sudoku/Diagram/index.js","Sudoku/Information/styled.js","Sudoku/Information/index.js","Sudoku/Information/getInformation.js","Sudoku/Main/index.js","Sudoku/Numbers/styled.js","Sudoku/Numbers/index.js","Sudoku/Title/index.js","Sudoku/Tools/styled.js","Sudoku/Tools/index.js","Sudoku/index.js","App/globalStyles.js","App/theme.js","App/index.js","reportWebVitals.js","App/mainSaga.js","App/rootSaga.js","Solver/solvingParams.js","Solver/solverSlice.js","App/store.js","index.js"],"names":["getNullDiagram","Array","fill","map","count","array","value","reduce","s","a","isArray","getColumn","column","getRow","row","getGroupXY","field","x","Math","floor","y","getGroup","groupXY","group","i","trio","slice","concat","combineArrays","main","additional","col","countNumbers","diagram","numbers","modeParams","intentions","mainSlice","createSlice","name","initialState","activeNumber","mode","intention","reducers","setDiagram","state","payload","clearDiagram","setNumbers","setDiagramAndNumbers","setActiveNumber","number","clearCustom","custom","setMode","setIntention","actions","selectSudokuSolverSaga","sudokuSolver","selectNumbers","selectActiveNumber","selectMode","selectIntention","useLocalState","keyName","defaultValue","useState","localStorageValue","localStorage","getItem","JSON","parse","getInitialValue","localState","setLocalState","useEffect","setItem","stringify","diagramParamNames","GIVEN","CUSTOM","templates","useDiagrams","dispatch","useDispatch","given","setGiven","setCustom","combined","conflicts","setConflicts","useSelector","len","length","template","random","result","includes","push","indexOf","numberIndex","addX","addY","getConflicts","table","oldArray","newValue","ix","iy","changeOneValue","newCombined","useKeyboard","activeField","setActiveField","key","setKey","window","addEventListener","event","preventDefault","keyReaction","Grid","styled","div","theme","colors","background","alpha","global","shadow","border","Field","groupBorder","numberMatch","isSolving","css","button","matchBackground","clickedRow","crossShadow","clickedCol","FieldButton","customNumber","numberShadow","cross","isActive","activeBackground","activeMatchingText","activeText","isLastClicked","lastClicked","isGiven","givenNumber","givenBackground","matchText","isConflict","conflictText","conflictOutline","conflictBackground","focusedShadow","Diagram","grid","useRef","setField","setLastClicked","some","conflict","prototype","call","current","children","find","child","attributes","toString","focus","ref","onMouseOver","e","target","onClick","applyNumber","onFocus","InformationBox","information","InformationText","span","text","Information","option","getInformationText","Main","NumbersGrid","NumberField","Number","Amount","subText","Numbers","onNumberSelect","amount","index","num","onMouseEnter","Title","h1","title","ToolsBox","tools","ToolsButton","buttons","highlight","highlightBackground","highlightText","Tools","Sudoku","GlobalStyles","createGlobalStyle","pallette","breakpoints","tablet","tabletLandscape","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mainSaga","rootSaga","all","solvingParams","method","NONE","ELIMINATION","REPLENISHMENT","REP_EXCLUSION","POSSIBILITY","EXCEPTION","solvingSlice","base","working","setBase","setWorking","setMethod","copyBaseToWorking","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","sudokuSolverReducer","solving","solvingReducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.965a7154.chunk.js","sourcesContent":["export const getNullDiagram = () => {\r\n    return new Array(9).fill(null).map(() => new Array(9).fill(null));\r\n}\r\n\r\nexport const count = (array, value) => {\r\n    return array.reduce((s, a) => s + (Array.isArray(a) ? count(a, value) : a === value), 0);\r\n}\r\n\r\nexport const getColumn = (array, column) => {\r\n    return array[column];\r\n}\r\n\r\nexport const getRow = (array, row) => {\r\n    return array.map(column => column[row]);\r\n}\r\n\r\nexport const getGroupXY = (field) => {\r\n    const groupX = Math.floor(field.x / 3);\r\n    const groupY = Math.floor(field.y / 3);\r\n    return { x: groupX, y: groupY };\r\n}\r\n\r\nexport const getGroup = (array, field) => {\r\n    const groupXY = getGroupXY(field);\r\n    let group = [];\r\n    for (let i = 0; i < 3; i++) {\r\n        const trio = array[groupXY.x * 3 + i].slice(groupXY.y * 3, groupXY.y * 3 + 3);\r\n        group = group.concat(trio);\r\n    }\r\n    return group;\r\n}\r\n\r\nexport const isConflict = (array, field, number) => {\r\n    const row = getRow(array, field.y);\r\n    const col = getColumn(array, field.x);\r\n    const group = getGroup(array, field);\r\n    return !(!row.includes(number) && !col.includes(number) && !group.includes(number));\r\n}\r\n\r\nexport const getConflicts = (array, field, number) => {\r\n    let result = [];\r\n    const row = getRow(array, field.y);\r\n    row.includes(number) && result.push({ x: row.indexOf(number), y: field.y });\r\n    const col = getColumn(array, field.x);\r\n    col.includes(number) && result.push({ x: field.x, y: col.indexOf(number) });\r\n    const group = getGroup(array, field);\r\n    const numberIndex = group.indexOf(number);\r\n    const groupXY = getGroupXY(field);\r\n    const addX = Math.floor(numberIndex / 3);\r\n    const addY = numberIndex % 3;\r\n    group.includes(number) && result.push({ x: groupXY.x * 3 + addX, y: groupXY.y * 3 + addY });\r\n    return result;\r\n}\r\n\r\nexport const combineArrays = (main, additional) => {\r\n    const result = main.map((col, x) => {\r\n        return col.map((row, y) => {\r\n            return main[x][y] === null ? additional[x][y] : main[x][y];\r\n        });;\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const changeOneValue = (oldArray, x, y, newValue) => {\r\n    return oldArray.map(((col, ix) => {\r\n        return col.map((value, iy) =>\r\n            x === ix && y === iy ? newValue : value\r\n        )\r\n    }))\r\n}\r\n\r\nexport const countNumbers = (diagram) => {\r\n    let numbers = new Array(9);\r\n    for (let i = 1; i <= 9; i++) {\r\n        numbers[i - 1] = 9 - count(diagram, i);\r\n    }\r\n    return numbers;\r\n}","export const modeParams = {\r\n    GIVEN: \"given\",\r\n    CUSTOM: \"custom\",\r\n    SOLVING: \"solving\",\r\n};\r\n\r\nexport const intentions = {\r\n    CLEAR_ALL: \"clearALL\",\r\n    CLEAR_CUSTOM: \"clearCustom\",\r\n    GENERATE_GIVEN: \"generateGiven\",\r\n};","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getNullDiagram } from \"../utils/arrayFunctions\";\r\nimport { modeParams } from \"./globalParams\";\r\n\r\nconst mainSlice = createSlice({\r\n    name: 'sudokuSolver',\r\n    initialState: {\r\n        diagram: getNullDiagram(),\r\n        numbers: new Array(9).fill(9),\r\n        activeNumber: 1,\r\n        mode: modeParams.GIVEN,\r\n        intention: null,\r\n    },\r\n    reducers: {\r\n        setDiagram: (state, {payload: diagram}) => {\r\n            state.diagram = diagram;\r\n            state.intention = null;\r\n        },\r\n        clearDiagram: (state) => {\r\n            state.diagram = getNullDiagram();\r\n            state.numbers = new Array(9).fill(9)\r\n            state.intention = null;\r\n        },\r\n        setNumbers: (state, { payload: numbers }) => {\r\n            state.numbers = numbers;\r\n        },\r\n        setDiagramAndNumbers: (state, {payload}) => {\r\n            state.diagram = payload.diagram;\r\n            state.numbers = payload.numbers;\r\n            state.intention = null;\r\n        },\r\n        setActiveNumber: (state, { payload: number }) => {\r\n            state.activeNumber = number;\r\n        },\r\n        clearCustom: (state) => {\r\n            state.custom = new Array(9).fill(null).map(() => new Array(9).fill(null));\r\n        },\r\n        setMode: (state, { payload: mode }) => {\r\n            state.mode = mode;\r\n        },\r\n        setIntention: (state, {payload: intention}) => {\r\n            state.intention = intention;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    setDiagram,\r\n    clearDiagram,\r\n    setNumbers,\r\n    setDiagramAndNumbers,\r\n    setActiveNumber,\r\n    setMode,\r\n    setIntention,\r\n} = mainSlice.actions;\r\n\r\nexport const selectSudokuSolverSaga = state => state.sudokuSolver;\r\nexport const selectDiagram = state => selectSudokuSolverSaga(state).diagram;\r\nexport const selectNumbers = state => selectSudokuSolverSaga(state).numbers;\r\nexport const selectActiveNumber = state => selectSudokuSolverSaga(state).activeNumber;\r\nexport const selectMode = state => selectSudokuSolverSaga(state).mode;\r\nexport const selectIntention = state => selectSudokuSolverSaga(state).intention;\r\n\r\nexport default mainSlice.reducer;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLocalState = (keyName, defaultValue) => {\r\n    const getInitialValue = (keyName) => {\r\n        const localStorageValue = localStorage.getItem(keyName);\r\n        const result = localStorageValue ? JSON.parse(localStorageValue) : defaultValue;\r\n        return result;\r\n    }\r\n\r\n    const [localState, setLocalState] = useState(getInitialValue(keyName));\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(localState));\r\n    }, [localState, keyName]);\r\n\r\n    return [localState, setLocalState];\r\n}","const diagramParamNames = {\r\n    GIVEN : \"given\",\r\n    CUSTOM : \"custom\",\r\n}\r\n\r\nexport default diagramParamNames;","const templates = [\r\n    [[6,8,null,null,5,7,4,9,3],[null,null,null,6,2,3,5,null,1],[null,null,3,null,9,null,6,2,null],[8,null,9,5,null,4,3,1,null],[2,4,6,null,null,1,7,null,null],[null,3,null,9,null,null,8,4,6],[null,null,null,null,null,5,null,3,4],[null,2,null,3,1,null,9,7,null],[null,1,null,null,null,null,2,6,8]],\r\n    [[9,2,null,5,4,null,null,7,null],[null,5,null,6,2,null,null,null,null],[null,7,3,1,null,null,6,null,null],[null,null,8,3,null,9,null,null,4],[1,null,null,null,5,2,3,null,null],[null,4,null,null,null,null,null,null,null],[null,null,9,null,3,5,null,null,null],[7,3,null,null,null,null,null,null,null],[null,null,5,null,7,null,2,3,null]],\r\n    [[null,3,null,7,null,null,4,6,9],[null,null,5,null,null,3,null,8,null],[1,null,6,null,null,null,7,null,null],[9,8,4,null,null,null,null,1,null],[null,null,null,null,null,null,null,null,4],[6,null,null,9,null,null,8,null,null],[null,null,null,5,1,null,9,null,6],[null,2,null,null,6,7,null,null,null],[5,null,null,null,2,null,3,null,7]],\r\n    [[null,null,null,7,2,null,9,null,null],[6,null,9,3,null,8,2,null,7],[null,null,null,null,null,null,null,null,null],[null,null,null,5,null,null,null,null,null],[null,1,null,9,6,3,null,4,null],[7,null,3,null,null,null,1,null,null],[null,null,2,null,null,4,3,7,8],[1,8,5,6,null,null,null,null,null],[null,null,null,2,null,9,null,null,1]],\r\n];\r\n\r\nexport default templates;","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { intentions, modeParams } from \"../../App/globalParams\";\r\nimport { changeOneValue, combineArrays, countNumbers, getConflicts, getNullDiagram } from \"../../utils/arrayFunctions\";\r\nimport { useLocalState } from \"../../utils/customHooks\";\r\nimport diagramParamNames from \"./diagramParamNames\";\r\nimport {\r\n    setActiveNumber,\r\n    setDiagramAndNumbers,\r\n    setIntention,\r\n    setMode,\r\n    clearDiagram,\r\n    selectActiveNumber,\r\n    selectIntention,\r\n    selectMode,\r\n} from \"../../App/mainSlice\";\r\nimport templates from \"../../utils/templates\";\r\n\r\nexport const useDiagrams = () => {\r\n    const dispatch = useDispatch();\r\n    const [given, setGiven] = useLocalState(diagramParamNames.GIVEN, getNullDiagram());\r\n    const [custom, setCustom] = useLocalState(diagramParamNames.CUSTOM, getNullDiagram());\r\n    const combined = combineArrays(given, custom);\r\n    const [conflicts, setConflicts] = useState([]);\r\n    const activeNumber = useSelector(selectActiveNumber);\r\n    const mode = useSelector(selectMode);\r\n    const intention = useSelector(selectIntention);\r\n\r\n    useEffect(() => {\r\n        dispatch(setDiagramAndNumbers({ diagram: combined, numbers: countNumbers(combined) })); // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const setField = (x, y) => {\r\n        setConflicts([]);\r\n        const conflicts = getConflicts(combined, { x: x, y: y }, activeNumber);\r\n        const newNumber = activeNumber === 0 ? null : activeNumber;\r\n        const table = changeOneValue(mode === modeParams.GIVEN ? given : custom, x, y, newNumber);\r\n        if (conflicts.length === 0) {\r\n            if (mode === modeParams.GIVEN) {\r\n                setGiven(table);\r\n                const newCombined = combineArrays(table, custom);\r\n                dispatch(setDiagramAndNumbers({ diagram: newCombined, numbers: countNumbers(newCombined) }));\r\n            } else {\r\n                if (given[x][y] === null) {\r\n                    setCustom(table);\r\n                    const newCombined = combineArrays(given, table);\r\n                    dispatch(setDiagramAndNumbers({ diagram: newCombined, numbers: countNumbers(newCombined) }));\r\n                }\r\n            }\r\n        } else {\r\n            setConflicts(conflicts)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        switch (intention) {\r\n            case intentions.CLEAR_ALL:\r\n                setGiven(getNullDiagram());\r\n                setCustom(getNullDiagram());\r\n                dispatch(clearDiagram());\r\n                break;\r\n            case intentions.CLEAR_CUSTOM:\r\n                setCustom(getNullDiagram());\r\n                dispatch(setDiagramAndNumbers({ diagram: given, numbers: countNumbers(given) }));\r\n                break;\r\n            case intentions.GENERATE_GIVEN:\r\n                const len = templates.length;\r\n                const template = templates[Math.floor(Math.random() * len)];\r\n                setGiven(template);\r\n                setCustom(getNullDiagram());\r\n                dispatch(setDiagramAndNumbers({ diagram: template, numbers: countNumbers(template) }));\r\n                break;\r\n            default: ;\r\n        }\r\n    }, [intention, dispatch, setCustom, setGiven, given]);\r\n\r\n    return [given, combined, conflicts, setField]\r\n}\r\n\r\nexport const useKeyboard = (activeField, setActiveField) => {\r\n    const dispatch = useDispatch();\r\n    const [key, setKey] = useState(\"\");\r\n\r\n    const keyReaction = (key) => {\r\n        switch (key) {\r\n            case \"0\":\r\n                dispatch(setActiveNumber(0)); break;\r\n            case \"1\":\r\n                dispatch(setActiveNumber(1)); break;\r\n            case \"2\":\r\n                dispatch(setActiveNumber(2)); break;\r\n            case \"3\":\r\n                dispatch(setActiveNumber(3)); break;\r\n            case \"4\":\r\n                dispatch(setActiveNumber(4)); break;\r\n            case \"5\":\r\n                dispatch(setActiveNumber(5)); break;\r\n            case \"6\":\r\n                dispatch(setActiveNumber(6)); break;\r\n            case \"7\":\r\n                dispatch(setActiveNumber(7)); break;\r\n            case \"8\":\r\n                dispatch(setActiveNumber(8)); break;\r\n            case \"9\":\r\n                dispatch(setActiveNumber(9)); break;\r\n            case \"c\":\r\n                dispatch(setIntention(intentions.CLEAR_ALL)); break;\r\n            case \"b\":\r\n                dispatch(setIntention(intentions.CLEAR_CUSTOM)); break;\r\n            case \"o\":\r\n                dispatch(setMode(modeParams.GIVEN)); break;\r\n            case \"p\":\r\n                dispatch(setMode(modeParams.CUSTOM)); break;\r\n            case \"ArrowUp\":\r\n                activeField.y > 0 && setActiveField({ x: activeField.x, y: activeField.y - 1 }); break;\r\n            case \"w\":\r\n                activeField.y > 0 && setActiveField({ x: activeField.x, y: activeField.y - 1 }); break;\r\n            case \"ArrowDown\":\r\n                activeField.y < 8 && setActiveField({ x: activeField.x, y: activeField.y + 1 }); break;\r\n            case \"s\":\r\n                activeField.y < 8 && setActiveField({ x: activeField.x, y: activeField.y + 1 }); break;\r\n            case \"ArrowLeft\":\r\n                activeField.x > 0 && setActiveField({ x: activeField.x - 1, y: activeField.y }); break;\r\n            case \"a\":\r\n                activeField.x > 0 && setActiveField({ x: activeField.x - 1, y: activeField.y }); break;\r\n            case \"ArrowRight\":\r\n                activeField.x < 8 && setActiveField({ x: activeField.x + 1, y: activeField.y }); break;\r\n            case \"d\":\r\n                activeField.x < 8 && setActiveField({ x: activeField.x + 1, y: activeField.y }); break;\r\n            default: break;\r\n        }\r\n        setKey(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        const keyAction = (event) => {\r\n            switch (event.key) {\r\n                case \"ArrowUp\":\r\n                case \"ArrowDown\":\r\n                case \"ArrowLeft\":\r\n                case \"ArrowRight\": event.preventDefault(); break;\r\n                default: ;\r\n            }\r\n            setKey(event.key);\r\n        }\r\n\r\n        window.addEventListener(\"keydown\", keyAction);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        keyReaction(key); // eslint-disable-next-line\r\n    }, [key]);\r\n}","import styled, { css } from \"styled-components\";\r\nimport alpha from \"color-alpha\";\r\nimport { modeParams } from \"../../App/globalParams\";\r\n\r\nexport const Grid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(9, 1fr);\r\n    grid-template-rows: repeat(9, 1fr);\r\n    grid-auto-flow: column;\r\n    width: 100%;\r\n    height: 80vmin;\r\n    background-color: ${({ theme }) => theme.colors.diagram.background};\r\n    box-shadow: 0px 0px 15px 3px ${({ theme }) => alpha(theme.colors.global.shadow, 0.6)};\r\n    border-radius: 10px;\r\n    transition: 0.3s;\r\n    border: 3px solid ${({ theme }) => theme.colors.diagram.border};\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n    cursor: cell;\r\n\r\n    &:hover {\r\n        border-radius: 15px;\r\n    }\r\n`;\r\n\r\nexport const Field = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.diagram.field.background};\r\n    border: dashed 1px ${({ theme }) => theme.colors.diagram.field.border};\r\n    margin: 0px;\r\n    padding: 2px;\r\n    cursor: cell;\r\n    ${({ x, theme }) => x % 3 === 2 && \"border-right: solid 2px \" + theme.colors.diagram.groupBorder + \";\"}\r\n    ${({ x, theme }) => x % 3 === 0 && \"border-left: solid 2px \" + theme.colors.diagram.groupBorder + \";\"}\r\n    ${({ y, theme }) => y % 3 === 2 && \"border-bottom: solid 2px \" + theme.colors.diagram.groupBorder + \";\"}\r\n    ${({ y, theme }) => y % 3 === 0 && \"border-top: solid 2px \" + theme.colors.diagram.groupBorder + \";\"}\r\n    ${({ y }) => y === 0 && \"border-top: 0;\"}\r\n    ${({ y }) => y === 8 && \"border-bottom: 0;\"}\r\n    ${({ x }) => x === 0 && \"border-left: 0;\"}\r\n    ${({ x }) => x === 8 && \"border-right: 0;\"}\r\n\r\n    ${({ numberMatch, isSolving, theme }) => numberMatch && !isSolving && css`\r\n        background-color: ${theme.colors.diagram.field.button.matchBackground};\r\n    `};\r\n    \r\n    ${({ clickedRow, isSolving, theme }) => clickedRow && !isSolving && css`\r\n        background-color: ${theme.colors.diagram.field.button.crossShadow};\r\n    `};\r\n\r\n    ${({ clickedCol, isSolving, theme }) => clickedCol && !isSolving && css`\r\n        background-color: ${theme.colors.diagram.field.button.crossShadow};\r\n    `};\r\n`;\r\n\r\nexport const FieldButton = styled.button`\r\n    margin: 0;\r\n    border: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    max-height: 100%;\r\n    border-radius: 8px;\r\n    background-color: ${({ theme }) => theme.colors.diagram.field.button.background};\r\n    outline: none;\r\n    transition: 0.3s;\r\n    font-size: 3vmin;\r\n    color: ${({ theme }) => theme.colors.diagram.customNumber};\r\n    text-shadow: 0px 0px 15px ${({ theme }) => theme.colors.diagram.field.button.numberShadow};\r\n    cursor: cell;\r\n\r\n    ${({ clickedRow, isSolving, theme }) => clickedRow && !isSolving && css`\r\n        background-color: ${theme.colors.diagram.field.button.cross};\r\n    `};\r\n\r\n    ${({ clickedCol, isSolving, theme }) => clickedCol && !isSolving && css`\r\n        background-color: ${theme.colors.diagram.field.button.cross};\r\n    `};\r\n\r\n    ${({ isActive, numberMatch, isSolving, mode, theme }) => {\r\n        return isActive && !isSolving && css`\r\n            background-color: ${theme.colors.diagram.field.button.activeBackground};\r\n            border-radius: 10px;\r\n            transform: scale(1.2);\r\n            font-size: 0px;\r\n            opacity: 0.9;\r\n            border-radius: ${mode === modeParams.GIVEN ? \"50%\" : \"20%\"};\r\n            &::before {\r\n                font-size: 3vmin;\r\n                content: \"${({ activeNumber }) => activeNumber === 0 ? '⛒' : activeNumber}\";\r\n                ${numberMatch ?\r\n                css`color: ${({ theme }) => theme.colors.diagram.field.button.activeMatchingText};`\r\n                :\r\n                css`color: ${({ theme }) => theme.colors.diagram.field.button.activeText};`\r\n            };\r\n            }`\r\n    }\r\n    };\r\n\r\n    ${({ isLastClicked, isSolving, theme }) => isLastClicked && !isSolving && css`border: 3px groove ${alpha(theme.colors.diagram.field.button.lastClicked, 0.3)};`}\r\n\r\n    ${({ isGiven }) => isGiven && css`\r\n            color: ${({ theme }) => theme.colors.diagram.givenNumber};\r\n            background-color: ${({ theme }) => theme.colors.diagram.givenBackground};\r\n            border-radius: 50%;\r\n        `\r\n    }\r\n\r\n    ${({ numberMatch, isSolving, theme }) => numberMatch && !isSolving && css`\r\n        color: ${theme.colors.diagram.field.button.matchText};\r\n    `};\r\n\r\n    ${({ isConflict, isSolving, theme }) => isConflict && !isSolving && css`\r\n        color: ${theme.colors.diagram.field.button.conflictText};\r\n        text-shadow:    -1px -1px 0 ${theme.colors.diagram.field.button.conflictOutline},\r\n                        1px -1px 0 ${theme.colors.diagram.field.button.conflictOutline},\r\n                        -1px 1px 0 ${theme.colors.diagram.field.button.conflictOutline},\r\n                        1px 1px 0 ${theme.colors.diagram.field.button.conflictOutline};\r\n        background-color: ${alpha(theme.colors.diagram.field.button.conflictBackground, 0.7)};\r\n        box-shadow: inset 0px 0px 1vmin 1vmin ${theme.colors.diagram.field.button.conflictOutline};\r\n    `}\r\n\r\n    ${({ isSolving, theme }) => css`\r\n        &:focus {\r\n            box-shadow: 0px 0px 10px 3px ${isSolving ? \"transparent\" : theme.colors.diagram.field.button.focusedShadow};\r\n        }\r\n    `}\r\n\r\n    \r\n`;","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectActiveNumber, selectMode } from \"../../App/mainSlice\";\r\nimport { useDiagrams, useKeyboard } from \"./diagramHooks\";\r\nimport { Field, FieldButton, Grid } from \"./styled\";\r\nimport { modeParams } from \"../../App/globalParams\";\r\n\r\nconst Diagram = () => {\r\n    const grid = useRef(null);\r\n    const [given, combined, conflicts, setField] = useDiagrams();\r\n    const [activeField, setActiveField] = useState({ x: 4, y: 4 });\r\n    const activeNumber = useSelector(selectActiveNumber);\r\n    const [lastClicked, setLastClicked] = useState({ x: null, y: null });\r\n    const mode = useSelector(selectMode);\r\n\r\n    useKeyboard(activeField, setActiveField);\r\n\r\n    const isConflict = (x, y) => {\r\n        return conflicts && conflicts.some(conflict => conflict.x === x && conflict.y === y);\r\n    }\r\n\r\n    const applyNumber = (x, y) => {\r\n        setLastClicked({ x: x, y: y });\r\n        setField(x, y);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fields = Array.prototype.slice.call(grid.current.children);\r\n        const active = fields.find(child =>\r\n            child.children[0].attributes.x.value === activeField.x.toString()\r\n            &&\r\n            child.children[0].attributes.y.value === activeField.y.toString()\r\n        );\r\n        active.children[0].focus()\r\n    }, [activeField]);\r\n\r\n    return (\r\n        <Grid ref={grid}>\r\n            {\r\n                combined.map((y, ix) => {\r\n                    return y.map((x, iy) => {\r\n                        return (\r\n                            <Field\r\n                                key={ix + \"-\" + iy}\r\n                                x={ix}\r\n                                y={iy}\r\n                                clickedRow={lastClicked && lastClicked.x === ix}\r\n                                clickedCol={lastClicked && lastClicked.y === iy}\r\n                                isSolving={mode === modeParams.SOLVING}\r\n                                numberMatch={x === activeNumber}>\r\n\r\n                                <FieldButton\r\n                                    onMouseOver={(e) => e.target.focus()}\r\n                                    onClick={() => { mode !== modeParams.SOLVING && applyNumber(ix, iy) }}\r\n                                    x={ix}\r\n                                    y={iy}\r\n                                    isSolving={mode === modeParams.SOLVING}\r\n                                    mode={mode}\r\n                                    isGiven={given[ix][iy] !== null}\r\n                                    activeNumber={activeNumber}\r\n                                    clickedRow={lastClicked && lastClicked.x === ix}\r\n                                    clickedCol={lastClicked && lastClicked.y === iy}\r\n                                    isLastClicked={lastClicked && ix === lastClicked.x && iy === lastClicked.y}\r\n                                    isConflict={isConflict(ix, iy)}\r\n                                    isActive={ix === activeField.x && iy === activeField.y}\r\n                                    numberMatch={x === activeNumber}\r\n                                    onFocus={() => { setActiveField({ x: ix, y: iy }) }}>\r\n\r\n                                    {x}\r\n\r\n                                </FieldButton>\r\n\r\n                            </Field>\r\n                        );\r\n                    });\r\n                })\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Diagram;","import alpha from \"color-alpha\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const InformationBox = styled.div`\r\n    width: 100%;\r\n    background-color: ${({ theme }) => theme.colors.information.background};\r\n    box-shadow: 0px 0px 15px 3px ${({ theme }) => alpha(theme.colors.global.shadow, 0.6)};\r\n    border-radius: 10px;\r\n    transition: 0.3s;\r\n    border: 3px solid ${({ theme }) => theme.colors.information.border};\r\n    padding: 2vh;\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        border-radius: 15px;\r\n    }\r\n`;\r\n\r\nexport const InformationText = styled.span`\r\n    color: ${({ theme }) => theme.colors.information.text};\r\n    font-size: 4vmin;\r\n    cursor: default;\r\n`","import { useSelector } from \"react-redux\";\r\nimport { selectMode } from \"../../App/mainSlice\";\r\nimport { getInformationText } from \"./getInformation\";\r\nimport { InformationBox, InformationText } from \"./styled\";\r\n\r\nconst Information = () => {\r\n    const mode = useSelector(selectMode);\r\n    const information = getInformationText(mode);\r\n\r\n    return (\r\n        <InformationBox>\r\n            <InformationText>\r\n                {information}\r\n            </InformationText>\r\n        </InformationBox>\r\n    );\r\n}\r\n\r\nexport default Information;","export const getInformationText = (option) => {\r\n    switch (option) {\r\n        case \"given\": return \"Mode: Set Given Numbers\";\r\n        case \"custom\": return \"Mode: Set Custom Numbers\";\r\n        case \"solving\": return \"Mode: SOLVING!\";\r\n        default: return \"Welcome to Sudoku Solver\"\r\n    }\r\n}","import styled from \"styled-components\";\r\n\r\nconst Main = styled.main`\r\n    max-width: 80vmin;\r\n    min-width: 320px;\r\n    width: 100%;\r\n    margin: auto;\r\n    transition: 0.3s;\r\n`;\r\n\r\nexport default Main;","import styled from \"styled-components\";\r\nimport alpha from \"color-alpha\";\r\n\r\nexport const NumbersGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(10, 1fr);\r\n    align-content: stretch;\r\n    justify-content: stretch;\r\n    width: 100%;\r\n    min-height: 13vmin;\r\n    background-color: ${({ theme }) => theme.colors.numbers.background};\r\n    box-shadow: 0px 0px 15px 3px ${({ theme }) => alpha(theme.colors.global.shadow, 0.6)};\r\n    border-radius: 10px;\r\n    transition: 0.3s;\r\n    border: 3px solid ${({ theme }) => theme.colors.numbers.border};\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n\r\n    &:hover {\r\n        border-radius: 15px;\r\n    }\r\n`;\r\n\r\nexport const NumberField = styled.button`\r\n    margin: 3px;\r\n    border: 0;\r\n    border-radius: 8px;\r\n    background-color: ${({ theme }) => theme.colors.numbers.field.background};\r\n    ${({ theme, isActive }) => isActive && \"background-color:\" + theme.colors.numbers.field.activeBackground + \";\"};\r\n    outline: none;\r\n    transition: 0.2s;\r\n    cursor: pointer;\r\n\r\n    &:focus {\r\n        box-shadow:\r\n        0px 0px 20px 5px ${({ theme }) => theme.colors.numbers.field.focusedShadow},\r\n        0px 0px 10px 3px ${({ theme }) => theme.colors.numbers.field.focusedShadow};\r\n    }\r\n`;\r\n\r\nexport const Number = styled.span`\r\n    font-size: 4vmin;\r\n    color: ${({ theme }) => theme.colors.numbers.field.text};\r\n`;\r\n\r\nexport const Amount = styled.span`\r\n    font-size: 2vmin;\r\n    color: ${({ theme }) => theme.colors.numbers.field.subText};\r\n    vertical-align: top;\r\n    \r\n`;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectActiveNumber, selectNumbers, setActiveNumber } from \"../../App/mainSlice\";\r\nimport { Amount, Number, NumberField, NumbersGrid } from \"./styled\";\r\n\r\nconst Numbers = () => {\r\n    const numbers = useSelector(selectNumbers);\r\n    const dispatch = useDispatch();\r\n    const activeNumber = useSelector(selectActiveNumber);\r\n    const onNumberSelect = (number) => {\r\n        dispatch(setActiveNumber(number));\r\n    }\r\n\r\n    return (\r\n        <NumbersGrid>\r\n            {\r\n                numbers.map((amount, index) => {\r\n                    const number = index + 1;\r\n                    return (\r\n                        <NumberField isActive={activeNumber === number} key={index} num={number} onMouseEnter={(e) => e.target.focus()} onClick={() => onNumberSelect(number)}>\r\n                            <Number>\r\n                                {number}\r\n                            </Number>\r\n                            <Amount>\r\n                                {amount}\r\n                            </Amount>\r\n                        </NumberField>\r\n                    )\r\n                })\r\n            }\r\n            <NumberField isActive={activeNumber === 0} num={0} onMouseEnter={(e) => e.target.focus()} onClick={() => onNumberSelect(0)}>\r\n                            <Number>\r\n                                &#9938;\r\n                            </Number>\r\n            </NumberField>\r\n        </NumbersGrid>\r\n    );\r\n}\r\n\r\nexport default Numbers;","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n    color:  ${({ theme }) => theme.colors.global.title};\r\n    font-size:  8vmin;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-shadow: 0px 0px 15px ${({ theme }) => theme.colors.global.shadow};\r\n`;\r\n\r\nexport default Title;","import alpha from \"color-alpha\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const ToolsBox = styled.div`\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n    align-content: stretch;\r\n    gap: 5px;\r\n    width: 100%;\r\n    min-height: 13vmin;\r\n    background-color: ${({ theme }) => theme.colors.tools.background};\r\n    box-shadow: 0px 0px 15px 3px ${({ theme }) => alpha(theme.colors.global.shadow, 0.6)};\r\n    border-radius: 10px;\r\n    transition: 0.3s;\r\n    border: 3px solid ${({ theme }) => theme.colors.tools.border};\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n\r\n    &:hover {\r\n        border-radius: 15px;\r\n    }\r\n`;\r\n\r\nexport const ToolsButton = styled.button`\r\n    flex-grow: 1;\r\n    margin: 0;\r\n    border: 0;\r\n    border-radius: 8px;\r\n    background-color: ${({ theme }) => theme.colors.tools.buttons.background};\r\n    color: ${({ theme }) => theme.colors.tools.buttons.text};\r\n    transition: 0.2s;\r\n    cursor: pointer;\r\n    font-size: 3vmin;\r\n\r\n    ${({ theme, highlight }) => highlight && css`\r\n        background-color: ${theme.colors.tools.buttons.highlightBackground};\r\n        color: ${theme.colors.tools.buttons.highlightText};\r\n    `};\r\n\r\n    ${({ theme, isActive }) => isActive && css`\r\n        background-color: ${theme.colors.tools.buttons.activeBackground};\r\n        color: ${theme.colors.tools.buttons.activeText};\r\n    `};\r\n\r\n    &:hover {\r\n        transform: scale(1.03);\r\n        filter: brightness(1.2);\r\n    }\r\n`","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { intentions, modeParams } from \"../../App/globalParams\";\r\nimport { selectMode, setIntention, setMode } from \"../../App/mainSlice\";\r\nimport { ToolsBox, ToolsButton } from \"./styled\";\r\n\r\nconst Tools = () => {\r\n    const dispatch = useDispatch();\r\n    const mode = useSelector(selectMode);\r\n\r\n    return (\r\n        <>\r\n            <ToolsBox>\r\n                <ToolsButton isActive={mode === modeParams.GIVEN} onClick={() => { mode !== modeParams.GIVEN && dispatch(setMode(modeParams.GIVEN)) }}>Given Numbers</ToolsButton>\r\n                <ToolsButton isActive={mode === modeParams.CUSTOM} onClick={() => { mode !== modeParams.CUSTOM && dispatch(setMode(modeParams.CUSTOM)) }}>Custom Numbers</ToolsButton>\r\n                <ToolsButton isActive={mode === modeParams.SOLVING} onClick={() => { mode !== modeParams.SOLVING && dispatch(setMode(modeParams.SOLVING)) }} highlight>SOLVE!</ToolsButton>\r\n            </ToolsBox>\r\n            <ToolsBox>\r\n                <ToolsButton onClick={() => dispatch(setIntention(intentions.GENERATE_GIVEN))}>Generate Given</ToolsButton>\r\n                <ToolsButton onClick={() => dispatch(setIntention(intentions.CLEAR_CUSTOM))}>Clear Custom</ToolsButton>\r\n                <ToolsButton onClick={() => dispatch(setIntention(intentions.CLEAR_ALL))}>Clear All</ToolsButton>\r\n            </ToolsBox>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tools;","import Diagram from \"./Diagram\";\r\nimport Information from \"./Information\";\r\nimport Main from \"./Main\";\r\nimport Numbers from \"./Numbers\";\r\nimport Title from \"./Title\";\r\nimport Tools from \"./Tools\";\r\n\r\nconst Sudoku = () => {\r\n    return (\r\n        <Main>\r\n            <Title> Sudoku Solver </Title>\r\n            <Information />\r\n            <Diagram />\r\n            <Numbers />\r\n            <Tools />\r\n        </Main>\r\n    );\r\n}\r\n\r\nexport default Sudoku;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n\r\n    *,\r\n    ::after,\r\n    ::before {\r\n        box-sizing: inherit;\r\n        -webkit-font-smoothing: inherit;\r\n    }\r\n\r\n    body {\r\n        background-color: ${({ theme }) => theme.colors.global.background};\r\n        font-family: 'Irish Grover', cursive;\r\n        padding-bottom: 40px;\r\n    }\r\n\r\n    button {\r\n        font-family: 'Alfa Slab One', cursive;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n`;","const pallette = {\r\n    white: \"#FFFFFF\",\r\n    black: \"#000000\",\r\n    seance: \"#6018A5\",\r\n    minsk: \"#522E74\",\r\n    parisM: \"#330660\",\r\n    purpleHeart: \"#833DC7\",\r\n    amethyst: \"#8F56C7\",\r\n    funBlue: \"#1D44A4\",\r\n    sanJuan: \"#314473\",\r\n    deepSapphire: \"#07205F\",\r\n    indigo: \"#4167C6\",\r\n    indigoLight: \"#5A79C6\",\r\n    indigoDarker: \"#506aac\",\r\n    razzmatazz: \"#D51059\",\r\n    camelot: \"#953558\",\r\n    siren: \"#7C0430\",\r\n    ceriseRed: \"#E53979\",\r\n    cranberry: \"#E5598D\",\r\n}\r\n\r\nexport const theme = {\r\n    colors: {\r\n        global: {\r\n            background: pallette.indigoLight,\r\n            shadow: pallette.deepSapphire,\r\n            title: pallette.white,\r\n        },\r\n        diagram: {\r\n            background: pallette.indigo,\r\n            border: pallette.sanJuan,\r\n            customNumber: pallette.deepSapphire,\r\n            givenNumber: pallette.parisM,\r\n            givenBackground: pallette.amethyst,\r\n            groupBorder: pallette.deepSapphire,\r\n            field: {\r\n                background: \"transparent\",\r\n                border: pallette.sanJuan,\r\n                button: {\r\n                    activeBackground: pallette.cranberry,\r\n                    activeMatchingText: pallette.parisM,\r\n                    activeText: pallette.camelot,\r\n                    background: pallette.indigoLight,\r\n                    conflictBackground: pallette.razzmatazz,\r\n                    conflictOutline: pallette.siren,\r\n                    conflictText: pallette.black,\r\n                    cross: pallette.indigoDarker,\r\n                    crossShadow: pallette.indigoDarker,\r\n                    focusedShadow: pallette.cranberry,\r\n                    lastClicked: pallette.parisM,\r\n                    matchBackground: pallette.parisM,\r\n                    matchText: pallette.white,\r\n                    numberShadow: pallette.funBlue,\r\n                },\r\n            },\r\n        },\r\n        information: {\r\n            background: pallette.amethyst,\r\n            border: pallette.sanJuan,\r\n            text: pallette.parisM,\r\n        },\r\n        numbers: {\r\n            background: pallette.indigo,\r\n            border: pallette.sanJuan,\r\n            field: {\r\n                activeBackground: pallette.parisM,\r\n                background: pallette.siren,\r\n                focusedShadow: pallette.cranberry,\r\n                text: pallette.white,\r\n                subText: pallette.cranberry,\r\n            }\r\n        },\r\n        tools: {\r\n            background: pallette.indigo,\r\n            border: pallette.sanJuan,\r\n            buttons: {\r\n                activeBackground: pallette.ceriseRed,\r\n                activeText: pallette.siren,\r\n                background: pallette.amethyst,\r\n                highlightBackground: pallette.seance,\r\n                highlightText: pallette.purpleHeart,\r\n                text: pallette.parisM,\r\n            }\r\n        }\r\n    },\r\n    breakpoints: {\r\n        tablet: \"767px\",\r\n        tabletLandscape: \"1024px\",\r\n    }\r\n}","import { ThemeProvider } from \"styled-components\";\nimport { Normalize } from \"styled-normalize\";\nimport Sudoku from \"../Sudoku\";\nimport { GlobalStyles } from \"./globalStyles\";\nimport { theme } from \"./theme\";\n\nconst App = () => {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Normalize />\n      <GlobalStyles />\n      <Sudoku />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*import { takeLatest, put, call, select } from \"redux-saga/effects\";\r\nimport { countNumbers } from \"../utils/arrayFunctions\";\r\nimport { setDiagram, setNumbers, selectDiagram } from \"./mainSlice\";\r\n\r\nfunction* calculateNumbersAmount() {\r\n    const diagram = yield select(selectDiagram);\r\n    const newNumbers = yield call(countNumbers, diagram);\r\n    yield put(setNumbers(newNumbers));\r\n}\r\n*/\r\nexport function* mainSaga() {\r\n    //yield takeLatest(setDiagram.type, calculateNumbersAmount);\r\n}","import { all } from \"@redux-saga/core/effects\";\r\nimport { mainSaga } from \"./mainSaga\"\r\n\r\nfunction* rootSaga () {\r\n    yield all([\r\n        mainSaga(),\r\n    ])\r\n}\r\n\r\nexport default rootSaga;","const solvingParams = {\r\n    method : {\r\n        NONE: null,\r\n        ELIMINATION : \"by elimination\",\r\n        REPLENISHMENT: \"by replenishment\",\r\n        REP_EXCLUSION: \"by replenishment and exclusion\",\r\n        POSSIBILITY: \"by possibility\",\r\n        EXCEPTION: \"by exception\",\r\n    }\r\n}\r\n\r\nexport default solvingParams;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getNullDiagram } from \"../utils/arrayFunctions\";\r\nimport solvingParams from \"./solvingParams\";\r\n\r\nconst solvingSlice = createSlice({\r\n    name: 'solving',\r\n    initialState: {\r\n        base: getNullDiagram(),\r\n        working: getNullDiagram(),\r\n        method: solvingParams.NONE,\r\n    },\r\n    reducers: {\r\n        setBase: (state, {payload: diagram}) => {\r\n            state.base = diagram;\r\n        },\r\n        setWorking: (state, {payload: diagram}) => {\r\n            state.working = diagram;\r\n        },\r\n        setMethod: (state, {payload: method}) => {\r\n            state.method = method;\r\n        },\r\n        copyBaseToWorking: (state) => {\r\n            state.working = state.base;\r\n        },\r\n    }\r\n});\r\n\r\nexport const {\r\n    setBase,\r\n    setWorking,\r\n    setMethod,\r\n    copyBaseToWorking,\r\n} = solvingSlice.actions;\r\n\r\nexport const selectSolvingSaga = state => state.solving;\r\nexport const selectBase = state => selectSolvingSaga(state).base;\r\nexport const selectWorking = state => selectSolvingSaga(state).working;\r\nexport const selectMethod = state => selectSolvingSaga(state).method;\r\n\r\nexport default solvingSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"@redux-saga/core\";\r\nimport rootSaga from \"./rootSaga\";\r\nimport sudokuSolverReducer from \"./mainSlice\";\r\nimport solvingReducer from \"../Solver/solverSlice\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        sudokuSolver: sudokuSolverReducer,\r\n        solving: solvingReducer,\r\n    },\r\n    middleware: [sagaMiddleware]\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./App/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}